@startuml
class CoffeeRequest {
    +coffee_type: str
    +coffee: bool
    +milk: bool
    +chocolate: bool
    +cinnamon: bool
    +ingredients: list
    +__init__(self, ...)
}

abstract class CoffeeHandler {
    +set_next(handler: CoffeeHandler) -> CoffeeHandler
    +handle(coffee_request: CoffeeRequest) -> CoffeeRequest
}

class CoffeeHandlerBase {
    -_next_handler: CoffeeHandler
    +set_next(handler: CoffeeHandler) -> CoffeeHandler
    +handle(coffee_request: CoffeeRequest) -> CoffeeRequest
}

class Coffee {
    +handle(coffee_request: CoffeeRequest) -> CoffeeRequest
}

class Milk {
    +handle(coffee_request: CoffeeRequest) -> CoffeeRequest
}

class Chocolate {
    +handle(coffee_request: CoffeeRequest) -> CoffeeRequest
}

class Cinnamon {
    +handle(coffee_request: CoffeeRequest) -> CoffeeRequest
}

class CoffeeFactory {
    +create_coffee(coffee_type: str) -> CoffeeRequest
}

CoffeeHandler <|-- CoffeeHandlerBase
CoffeeHandlerBase <|-- Coffee
CoffeeHandlerBase <|-- Milk
CoffeeHandlerBase <|-- Chocolate
CoffeeHandlerBase <|-- Cinnamon
CoffeeFactory --> CoffeeRequest
@enduml